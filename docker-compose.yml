version: '3.9'

services:
  postgres:
    image: postgres:15-alpine
    container_name: crm-postgres
    environment:
      POSTGRES_USER: crm_user
      POSTGRES_PASSWORD: crm_password
      POSTGRES_DB: crm_dev
      POSTGRES_INITDB_ARGS: "-c shared_preload_libraries=pg_stat_statements"
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./crm-ops/docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crm_user -d crm_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - crm-network

  redis:
    image: redis:7-alpine
    container_name: crm-redis
    command: redis-server --appendonly yes --requirepass ""
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - crm-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: crm-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@crm.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - crm-network
    profiles:
      - tools

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: crm-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - crm-network
    profiles:
      - tools

volumes:
  postgres-data:
  redis-data:

networks:
  crm-network:
    driver: bridge